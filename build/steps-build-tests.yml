parameters:
- name: pathToSrc
  type: string
  default: ''
- name: projectName
  type: string
  default: ''
- name: applicationEnvironment
  type: string
  default: ''

steps:
- template: templates/flutter-install.yml

#-if false
- download: current
  condition: eq('GeneratedApp', '${{ parameters.projectName }}')
  artifact: GeneratedApp
#-endif

- task: FlutterCommand@0
  displayName: "Run Flutter Clean"
  inputs:
    projectDirectory: '${{ parameters.pathToSrc }}/app'
    arguments: 'clean'

- task: FlutterCommand@0
  displayName: "Run Flutter Pub Get"
  inputs:
    projectDirectory: '${{ parameters.pathToSrc }}/app'
    arguments: 'pub get'

- task: PowerShell@2
  displayName: 'Execute Build Runner'
  inputs:
    targetType: 'inline'
    script: |
      Set-Location '${{ parameters.pathToSrc }}/app'
      $(DartToolPath)/dart run build_runner build --delete-conflicting-outputs

- task: FlutterTest@0
  displayName: "Run Tests"
  inputs:
    generateCodeCoverageReport: true
    projectDirectory: '${{ parameters.pathToSrc }}/app'

- task: FlutterCommand@0
  displayName: "Run Integration Tests"
  inputs:
    projectDirectory: '${{ parameters.pathToSrc }}/app'
    arguments: test integration_test --dart-define ENV=${{ parameters.applicationEnvironment }} -d all

- script: |
    set PATH=%PATH%;C:\Users\VssAdministrator\AppData\Local\Pub\Cache\bin
    dart pub global activate cobertura
    cd ${{ parameters.pathToSrc }}/app
    cobertura convert
  displayName: Convert Code Coverage from LCOV to Cobertura

- task: PublishCodeCoverageResults@2
  displayName: Publish Code Coverage Result
  condition: succeeded()
  inputs:
    summaryFileLocation: "${{ parameters.pathToSrc }}/app/coverage/cobertura.xml"

- publish: $(Build.ArtifactStagingDirectory)
  displayName: 'Publish Artifact'
  condition: always()
  artifact: $(ArtifactName)

#-if false
- task: DeleteFiles@1
  displayName: "Remove downloaded artifacts (GeneratedApp folder)"
  condition: always()
  inputs:
    SourceFolder: $(Pipeline.Workspace)/GeneratedApp
    RemoveSourceFolder: true
    Contents: '**'
#-endif

- task: PostBuildCleanup@3
  displayName: 'Post-Build cleanup: Cleanup files to keep build server clean!'
  condition: always()
